{"ast":null,"code":"var _jsxFileName = \"/Users/junhee/MLOps/src/People/PeopleDialog.js\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { add, update } from \"../ReduxTable/peopleSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { nextID } from \"../ReduxTable/peopleSlice\";\nexport default function PeopleDialog({\n  data,\n  render,\n  onSave\n}) {\n  const [open, setOpen] = React.useState(false);\n  const dispatch = useDispatch();\n  const defaultImg = data && data.img;\n  const defaultName = data && data.name; // Existing ID or random ID\n\n  const id = data && data.id;\n  const [img, setImg] = React.useState(defaultImg);\n  const [name, setName] = React.useState(defaultName);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n    setName(defaultName);\n    setImg(defaultImg);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSave = () => {\n    const action = data ? update : add;\n    dispatch(action({\n      name,\n      id: id || nextID(),\n      img\n    }));\n    onSave && onSave();\n    handleClose();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, render(handleClickOpen), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, data ? \"Edit\" : \"Add\", \" Driver\", \" \"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Name\",\n    fullWidth: true,\n    value: name,\n    onChange: e => {\n      setName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    label: \"Image URL\",\n    fullWidth: true,\n    value: img,\n    onChange: e => {\n      setImg(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSave,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Save\"))));\n}","map":{"version":3,"sources":["/Users/junhee/MLOps/src/People/PeopleDialog.js"],"names":["React","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","add","update","useDispatch","nextID","PeopleDialog","data","render","onSave","open","setOpen","useState","dispatch","defaultImg","img","defaultName","name","id","setImg","setName","handleClickOpen","handleClose","handleSave","action","e","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { add, update } from \"../ReduxTable/peopleSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { nextID } from \"../ReduxTable/peopleSlice\";\n\nexport default function PeopleDialog({ data, render, onSave }) {\n  const [open, setOpen] = React.useState(false);\n  const dispatch = useDispatch();\n\n  const defaultImg = data && data.img;\n  const defaultName = data && data.name;\n  // Existing ID or random ID\n  const id = data && data.id;\n\n  const [img, setImg] = React.useState(defaultImg);\n  const [name, setName] = React.useState(defaultName);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n    setName(defaultName);\n    setImg(defaultImg);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSave = () => {\n    const action = data ? update : add;\n    dispatch(action({ name, id: id || nextID(), img }));\n    onSave && onSave();\n    handleClose();\n  };\n\n  return (\n    <>\n      {render(handleClickOpen)}\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          {data ? \"Edit\" : \"Add\"} Driver{\" \"}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Name\"\n            fullWidth\n            value={name}\n            onChange={(e) => {\n              setName(e.target.value);\n            }}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Image URL\"\n            fullWidth\n            value={img}\n            onChange={(e) => {\n              setImg(e.target.value);\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSave} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}