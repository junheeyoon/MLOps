{"ast":null,"code":"var _jsxFileName = \"/Users/junhee/MLOps/src/People/RevenueLine.js\";\nimport React from \"react\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport moment from \"moment\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nfunction useOptions(theme, data) {\n  return {\n    chart: {\n      height: \"250px\",\n      type: \"spline\"\n    },\n    xAxis: {\n      type: \"datetime\"\n    },\n    yAxis: {\n      labels: {\n        format: \"${value}\"\n      }\n    },\n    title: null,\n    series: [{\n      name: \"Revenue\",\n      data,\n      color: theme.palette.primary.main\n    }],\n    plotOptions: {\n      series: {\n        marker: {\n          enabled: false\n        }\n      }\n    }\n  };\n}\n\nexport default function RevenueLine() {\n  const theme = useTheme();\n  const chartData = [{\n    date: new Date(),\n    fare: 1000\n  }, {\n    date: moment(new Date()).add(1, \"day\").valueOf(),\n    fare: 300\n  }, {\n    date: moment(new Date()).add(2, \"day\").valueOf(),\n    fare: 800\n  }, {\n    date: moment(new Date()).add(3, \"day\").valueOf(),\n    fare: 400\n  }, {\n    date: moment(new Date()).add(4, \"day\").valueOf(),\n    fare: 1300\n  }, {\n    date: moment(new Date()).add(5, \"day\").valueOf(),\n    fare: 2300\n  }, {\n    date: moment(new Date()).add(6, \"day\").valueOf(),\n    fare: 1900\n  }].filter(({\n    date\n  }) => date);\n  const mapped = chartData.map(({\n    fare,\n    date\n  }) => [moment(date).valueOf(), fare]);\n  const options = useOptions(theme, mapped);\n  return /*#__PURE__*/React.createElement(HighchartsReact, {\n    highcharts: Highcharts,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 10\n    }\n  });\n}","map":{"version":3,"sources":["/Users/junhee/MLOps/src/People/RevenueLine.js"],"names":["React","useTheme","moment","Highcharts","HighchartsReact","useOptions","theme","data","chart","height","type","xAxis","yAxis","labels","format","title","series","name","color","palette","primary","main","plotOptions","marker","enabled","RevenueLine","chartData","date","Date","fare","add","valueOf","filter","mapped","map","options"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport moment from \"moment\";\n\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nfunction useOptions(theme, data) {\n  return {\n    chart: {\n      height: \"250px\",\n      type: \"spline\",\n    },\n    xAxis: {\n      type: \"datetime\",\n    },\n    yAxis: {\n      labels: {\n        format: \"${value}\",\n      },\n    },\n    title: null,\n    series: [\n      {\n        name: \"Revenue\",\n        data,\n        color: theme.palette.primary.main,\n      },\n    ],\n    plotOptions: {\n      series: {\n        marker: {\n          enabled: false,\n        },\n      },\n    },\n  };\n}\n\nexport default function RevenueLine() {\n  const theme = useTheme();\n  const chartData = [\n    { date: new Date(), fare: 1000 },\n    { date: moment(new Date()).add(1, \"day\").valueOf(), fare: 300 },\n    { date: moment(new Date()).add(2, \"day\").valueOf(), fare: 800 },\n    { date: moment(new Date()).add(3, \"day\").valueOf(), fare: 400 },\n    { date: moment(new Date()).add(4, \"day\").valueOf(), fare: 1300 },\n    { date: moment(new Date()).add(5, \"day\").valueOf(), fare: 2300 },\n    { date: moment(new Date()).add(6, \"day\").valueOf(), fare: 1900 },\n  ].filter(({ date }) => date);\n  const mapped = chartData.map(({ fare, date }) => [\n    moment(date).valueOf(),\n    fare,\n  ]);\n  const options = useOptions(theme, mapped);\n\n  return <HighchartsReact highcharts={Highcharts} options={options} />;\n}\n"]},"metadata":{},"sourceType":"module"}