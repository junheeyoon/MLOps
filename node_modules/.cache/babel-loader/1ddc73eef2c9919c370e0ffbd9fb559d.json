{"ast":null,"code":"var _jsxFileName = \"/Users/junhee/Downloads/material-ui-dashboard-0.1.2/src/ReduxTable/people.js\";\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { add, remove, selectPeople, selectLoading } from \"./peopleSlice\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport PropTypes from \"prop-types\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport Content from \"../Dashboard/Content\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport PeopleDialog from \"../People/PeopleDialog\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeletePeopleDialog from \"../People/DeletePeopleDialog\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { SummaryCard } from \"../People/Driver\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }\n  }));\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [{\n  id: \"avatar\",\n  numeric: false,\n  disablePadding: true,\n  label: \"\"\n}, {\n  id: \"name\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Name\"\n}, {\n  id: \"id\",\n  numeric: true,\n  disablePadding: false,\n  label: \"ID\"\n}, {\n  id: \"trips\",\n  numeric: true,\n  disablePadding: false,\n  label: \"Trips\"\n}];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: rowCount > 0 && numSelected === rowCount,\n    onChange: onSelectAllClick,\n    inputProps: {\n      \"aria-label\": \"select all desserts\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  })), headCells.map(headCell => /*#__PURE__*/React.createElement(TableCell, {\n    key: headCell.id,\n    align: headCell.numeric ? \"right\" : \"left\",\n    padding: headCell.disablePadding ? \"none\" : \"default\",\n    sortDirection: orderBy === headCell.id ? order : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableSortLabel, {\n    active: orderBy === headCell.id,\n    direction: orderBy === headCell.id ? order : \"asc\",\n    onClick: createSortHandler(headCell.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, headCell.label, orderBy === headCell.id ? /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.visuallyHidden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, order === \"desc\" ? \"sorted descending\" : \"sorted ascending\") : null)))));\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  deleteButton: {\n    marginLeft: theme.spacing(1)\n  }\n}));\nexport default function People() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(25);\n  const rows = useSelector(selectPeople);\n  const loading = useSelector(selectLoading);\n  const error = false; // todo with snacks\n\n  const [snackOpen, setSnackOpen] = React.useState(false);\n  const dispatch = useDispatch();\n  let history = useHistory();\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  if (error) return `Error! ${error.message}`;\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.id);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const selectTableRow = id => {\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = id => selected.indexOf(id) !== -1;\n\n  const snackClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setSnackOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Snackbar, {\n    open: snackOpen,\n    autoHideDuration: 2000,\n    onClose: snackClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    onClose: snackClose,\n    severity: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }\n  }, snackOpen)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    edge: \"start\",\n    className: classes.grow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PeopleDialog, {\n    edge: \"end\",\n    onSave: () => {\n      setSnackOpen(\"Person added\");\n    },\n    render: open => /*#__PURE__*/React.createElement(Button, {\n      edge: \"end\",\n      color: \"primary\",\n      variant: \"contained\",\n      startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 28\n        }\n      }),\n      onClick: open,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 15\n      }\n    }, \"Add Person\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 11\n    }\n  }), selected.length > 0 && /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DeletePeopleDialog, {\n    ids: selected,\n    onSave: () => {\n      dispatch(remove(selected));\n      setSnackOpen(`${selected.length} Driver${selected.length > 1 ? \"s\" : \"\"} Deleted`);\n      setSelected([]);\n    },\n    render: open => /*#__PURE__*/React.createElement(Button, {\n      className: classes.deleteButton,\n      variant: \"contained\",\n      color: \"secondary\",\n      startIcon: /*#__PURE__*/React.createElement(DeleteIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 32\n        }\n      }),\n      onClick: open,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 19\n      }\n    }, \" \", \"Delete \", selected.length, \" selected\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(SummaryCard, {\n    title: \"Drivers\",\n    value: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      className: classes.table,\n      \"aria-labelledby\": \"tableTitle\",\n      size: \"small\",\n      \"aria-label\": \"enhanced table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(EnhancedTableHead, {\n      classes: classes,\n      numSelected: selected.length,\n      order: order,\n      orderBy: orderBy,\n      onSelectAllClick: handleSelectAllClick,\n      onRequestSort: handleRequestSort,\n      rowCount: rows.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 19\n      }\n    }, stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n      const isItemSelected = isSelected(row.id);\n      const labelId = `enhanced-table-checkbox-${index}`;\n      return /*#__PURE__*/React.createElement(TableRow, {\n        hover: true,\n        role: \"checkbox\",\n        \"aria-checked\": isItemSelected,\n        tabIndex: -1,\n        onClick: e => {\n          if (e.target.type === \"checkbox\" || e.target.className.indexOf(\"Checkbox\") > 0) {\n            return;\n          }\n\n          history.push(`/people/${row.id}`);\n        },\n        key: `person-${row.id}`,\n        selected: isItemSelected,\n        style: {\n          cursor: \"pointer\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        padding: \"checkbox\",\n        onClick: e => {\n          selectTableRow(row.id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        checked: isItemSelected,\n        inputProps: {\n          \"aria-labelledby\": labelId\n        },\n        onChange: e => {\n          selectTableRow(row.id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 31\n        }\n      })), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Avatar, {\n        alt: row.name,\n        src: row.img,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 31\n        }\n      })), /*#__PURE__*/React.createElement(TableCell, {\n        component: \"th\",\n        id: labelId,\n        scope: \"row\",\n        padding: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 29\n        }\n      }, row.name), /*#__PURE__*/React.createElement(TableCell, {\n        align: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 29\n        }\n      }, row.id), /*#__PURE__*/React.createElement(TableCell, {\n        align: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 29\n        }\n      }, row.trips));\n    })))), /*#__PURE__*/React.createElement(TablePagination, {\n      rowsPerPageOptions: [5, 10, 25],\n      component: \"div\",\n      count: rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onChangePage: handleChangePage,\n      onChangeRowsPerPage: handleChangeRowsPerPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 15\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/junhee/Downloads/material-ui-dashboard-0.1.2/src/ReduxTable/people.js"],"names":["React","useState","useSelector","useDispatch","add","remove","selectPeople","selectLoading","MuiAlert","TableHead","TableRow","TableCell","Checkbox","TableSortLabel","PropTypes","lighten","makeStyles","useHistory","Content","CircularProgress","Snackbar","Toolbar","PeopleDialog","Button","AddIcon","Tooltip","DeletePeopleDialog","DeleteIcon","SummaryCard","TableContainer","Table","TableBody","Avatar","TablePagination","Alert","props","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","classes","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","headCell","visuallyHidden","propTypes","object","isRequired","number","func","oneOf","string","useStyles","theme","root","width","paper","marginBottom","spacing","table","minWidth","border","clip","height","margin","overflow","padding","position","top","grow","flexGrow","deleteButton","marginLeft","People","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","rows","loading","error","snackOpen","setSnackOpen","dispatch","history","message","handleRequestSort","isAsc","handleSelectAllClick","target","checked","newSelecteds","n","selectTableRow","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","isSelected","snackClose","reason","open","row","isItemSelected","labelId","e","type","className","push","cursor","name","img","trips"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { add, remove, selectPeople, selectLoading } from \"./peopleSlice\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport PropTypes from \"prop-types\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport Content from \"../Dashboard/Content\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport PeopleDialog from \"../People/PeopleDialog\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeletePeopleDialog from \"../People/DeletePeopleDialog\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { SummaryCard } from \"../People/Driver\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"avatar\",\n    numeric: false,\n    disablePadding: true,\n    label: \"\",\n  },\n  {\n    id: \"name\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Name\",\n  },\n  { id: \"id\", numeric: true, disablePadding: false, label: \"ID\" },\n  { id: \"trips\", numeric: true, disablePadding: false, label: \"Trips\" },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  deleteButton: {\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport default function People() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(25);\n  const rows = useSelector(selectPeople);\n  const loading = useSelector(selectLoading);\n  const error = false;\n  // todo with snacks\n  const [snackOpen, setSnackOpen] = React.useState(false);\n  const dispatch = useDispatch();\n\n  let history = useHistory();\n\n  if (loading) {\n    return (\n      <Content>\n        <CircularProgress />\n      </Content>\n    );\n  }\n\n  if (error) return `Error! ${error.message}`;\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const selectTableRow = (id) => {\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (id) => selected.indexOf(id) !== -1;\n  const snackClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setSnackOpen(false);\n  };\n\n  return (\n    <Content>\n      <Snackbar open={snackOpen} autoHideDuration={2000} onClose={snackClose}>\n        <Alert onClose={snackClose} severity=\"success\">\n          {snackOpen}\n        </Alert>\n      </Snackbar>\n      <div className={classes.root}>\n        <Toolbar>\n          <div edge=\"start\" className={classes.grow} />\n          <PeopleDialog\n            edge=\"end\"\n            onSave={() => {\n              setSnackOpen(\"Person added\");\n            }}\n            render={(open) => (\n              <Button\n                edge=\"end\"\n                color=\"primary\"\n                variant=\"contained\"\n                startIcon={<AddIcon />}\n                onClick={open}\n              >\n                Add Person\n              </Button>\n            )}\n          />\n          {selected.length > 0 && (\n            <Tooltip title={\"Delete\"}>\n              <DeletePeopleDialog\n                ids={selected}\n                onSave={() => {\n                  dispatch(remove(selected));\n\n                  setSnackOpen(\n                    `${selected.length} Driver${\n                      selected.length > 1 ? \"s\" : \"\"\n                    } Deleted`\n                  );\n                  setSelected([]);\n                }}\n                render={(open) => (\n                  <Button\n                    className={classes.deleteButton}\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    startIcon={<DeleteIcon />}\n                    onClick={open}\n                  >\n                    {\" \"}\n                    Delete {selected.length} selected\n                  </Button>\n                )}\n              />\n            </Tooltip>\n          )}\n        </Toolbar>\n        <SummaryCard\n          title={\"Drivers\"}\n          value={\n            <>\n              <TableContainer>\n                <Table\n                  className={classes.table}\n                  aria-labelledby=\"tableTitle\"\n                  size={\"small\"}\n                  aria-label=\"enhanced table\"\n                >\n                  <EnhancedTableHead\n                    classes={classes}\n                    numSelected={selected.length}\n                    order={order}\n                    orderBy={orderBy}\n                    onSelectAllClick={handleSelectAllClick}\n                    onRequestSort={handleRequestSort}\n                    rowCount={rows.length}\n                  />\n                  <TableBody>\n                    {stableSort(rows, getComparator(order, orderBy))\n                      .slice(\n                        page * rowsPerPage,\n                        page * rowsPerPage + rowsPerPage\n                      )\n                      .map((row, index) => {\n                        const isItemSelected = isSelected(row.id);\n                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                        return (\n                          <TableRow\n                            hover\n                            role=\"checkbox\"\n                            aria-checked={isItemSelected}\n                            tabIndex={-1}\n                            onClick={(e) => {\n                              if (\n                                e.target.type === \"checkbox\" ||\n                                e.target.className.indexOf(\"Checkbox\") > 0\n                              ) {\n                                return;\n                              }\n                              history.push(`/people/${row.id}`);\n                            }}\n                            key={`person-${row.id}`}\n                            selected={isItemSelected}\n                            style={{ cursor: \"pointer\" }}\n                          >\n                            <TableCell\n                              padding=\"checkbox\"\n                              onClick={(e) => {\n                                selectTableRow(row.id);\n                              }}\n                            >\n                              <Checkbox\n                                checked={isItemSelected}\n                                inputProps={{ \"aria-labelledby\": labelId }}\n                                onChange={(e) => {\n                                  selectTableRow(row.id);\n                                }}\n                              />\n                            </TableCell>\n                            <TableCell>\n                              <Avatar alt={row.name} src={row.img} />\n                            </TableCell>\n                            <TableCell\n                              component=\"th\"\n                              id={labelId}\n                              scope=\"row\"\n                              padding=\"none\"\n                            >\n                              {row.name}\n                            </TableCell>\n                            <TableCell align=\"right\">{row.id}</TableCell>\n                            <TableCell align=\"right\">{row.trips}</TableCell>\n                          </TableRow>\n                        );\n                      })}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                component=\"div\"\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n              />\n            </>\n          }\n        />\n      </div>\n    </Content>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}